-- ============================================================================
-- Скрипт инициализации базы данных PostgreSQL
-- ============================================================================
-- Выполняется ОДИН РАЗ при первом запуске контейнера через механизм
-- /docker-entrypoint-initdb.d/ официального образа postgres:15-alpine
--
-- Таблицы создаются автоматически через SQLAlchemy Base.metadata.create_all()
--
-- ВАЖНО: После выполнения этого скрипта Docker автоматически перезапускает
-- PostgreSQL, поэтому все параметры (включая требующие рестарта) вступят в силу
-- ============================================================================

-- Устанавливаем расширения для мониторинга и производительности
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ============================================================================
-- НАСТРОЙКА ПАРАМЕТРОВ POSTGRESQL
-- ============================================================================
-- Параметры делятся на две категории:
-- 1. Требующие РЕСТАРТА сервера (postmaster context)
-- 2. Применяемые через pg_reload_conf() без рестарта (sighup context)
--
-- Все параметры вступят в силу после автоматического рестарта контейнера,
-- который выполняет docker-entrypoint после завершения init-скриптов.
-- ============================================================================

-- ----------------------------------------------------------------------------
-- Параметры производительности и мониторинга
-- ----------------------------------------------------------------------------
-- ⚠️ ТРЕБУЕТ РЕСТАРТА: shared_preload_libraries загружается при старте сервера
ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';

-- Следующие параметры применяются без рестарта (через SIGHUP):
ALTER SYSTEM SET track_activity_query_size = 2048;
ALTER SYSTEM SET log_statement = 'none';
ALTER SYSTEM SET log_min_duration_statement = 3000;
ALTER SYSTEM SET log_connections = off;
ALTER SYSTEM SET log_disconnections = off;
ALTER SYSTEM SET log_min_messages = warning;

-- ----------------------------------------------------------------------------
-- Параметры автовакуума (применяются без рестарта)
-- ----------------------------------------------------------------------------
ALTER SYSTEM SET autovacuum = on;
ALTER SYSTEM SET autovacuum_max_workers = 3;
ALTER SYSTEM SET autovacuum_naptime = 60;
ALTER SYSTEM SET autovacuum_vacuum_threshold = 50;
ALTER SYSTEM SET autovacuum_analyze_threshold = 50;

-- ----------------------------------------------------------------------------
-- Параметры WAL и репликации
-- ----------------------------------------------------------------------------
-- ⚠️ ТРЕБУЮТ РЕСТАРТА: wal_level и max_wal_senders изменяют поведение WAL
ALTER SYSTEM SET wal_level = replica;
ALTER SYSTEM SET max_wal_senders = 3;

-- Следующий параметр применяется без рестарта (через SIGHUP):
ALTER SYSTEM SET wal_keep_size = '1GB';

-- ============================================================================
-- ПРИМЕНЕНИЕ ИЗМЕНЕНИЙ
-- ============================================================================
-- pg_reload_conf() НЕ используется, так как:
-- 1. Некоторые параметры выше требуют полного рестарта PostgreSQL
--    (shared_preload_libraries, wal_level, max_wal_senders)
-- 2. Docker автоматически перезапускает PostgreSQL после выполнения всех
--    скриптов из /docker-entrypoint-initdb.d/
-- 3. При рестарте все параметры (и требующие рестарта, и обычные) применятся
--
-- Таким образом, мы полагаемся на стандартное поведение официального образа
-- postgres:15-alpine, который гарантирует рестарт после инициализации.
-- ============================================================================

-- Выводим информацию о созданной базе данных
SELECT 
    'Database initialized successfully' as status,
    current_database() as database_name,
    current_user as current_user,
    version() as postgres_version;
