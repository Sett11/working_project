#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import importlib
import sys

def check_dependency(module_name, package_name=None):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –º–æ–¥—É–ª—å"""
    try:
        importlib.import_module(module_name)
        print(f"‚úÖ {package_name or module_name} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except ImportError:
        print(f"‚ùå {package_name or module_name} - –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_dependencies = [
        ("pytest", "pytest"),
        ("pytest_asyncio", "pytest-asyncio"),
        ("pytest_cov", "pytest-cov"),
        ("pytest_mock", "pytest-mock"),
        ("pytest_xdist", "pytest-xdist"),
        ("pytest_html", "pytest-html"),
        ("pytest_json_report", "pytest-json-report"),
        ("httpx", "httpx"),
        ("aiofiles", "aiofiles"),
    ]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app_dependencies = [
        ("fastapi", "fastapi"),
        ("uvicorn", "uvicorn"),
        ("gradio", "gradio"),
        ("sqlalchemy", "SQLAlchemy"),
        ("asyncpg", "asyncpg"),
        ("reportlab", "reportlab"),
        ("pydantic", "pydantic"),
    ]
    
    print("\nüì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    test_missing = []
    for module, package in test_dependencies:
        if not check_dependency(module, package):
            test_missing.append(package)
    
    print("\nüîß –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    app_missing = []
    for module, package in app_dependencies:
        if not check_dependency(module, package):
            app_missing.append(package)
    
    print("\n" + "=" * 50)
    
    if test_missing or app_missing:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!")
        
        if test_missing:
            print(f"\nüìã –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
            for dep in test_missing:
                print(f"   - {dep}")
            print(f"\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π:")
            print(f"   pip install {' '.join(test_missing)}")
        
        if app_missing:
            print(f"\nüìã –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
            for dep in app_missing:
                print(f"   - {dep}")
            print(f"\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π:")
            print(f"   pip install {' '.join(app_missing)}")
        
        print(f"\nüê≥ –ò–ª–∏ –ø–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:")
        print(f"   docker-compose down")
        print(f"   docker-compose build --no-cache")
        print(f"   docker-compose up -d")
        
        return False
    else:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã:")
        print("   docker-compose exec backend python run_tests.py --all")
        return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
