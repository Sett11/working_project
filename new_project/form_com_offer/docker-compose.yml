version: '3.8'

services:
  backend:
    build: .
    container_name: ${COMPOSE_PROJECT_NAME}_backend
    command: uvicorn back.back:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy  # Ждём готовности БД
    environment:
      - DATABASE_URL=${DATABASE_URL}
    restart: always

  frontend:
    build: .
    container_name: ${COMPOSE_PROJECT_NAME}_frontend
    command: python main.py
    volumes:
      - .:/app
    ports:
      - "7860:7860"
    depends_on:
      - backend
    restart: always

  db:
    image: postgres:15-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db/init:/docker-entrypoint-initdb.d  # Скрипты инициализации
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    healthcheck:  # Добавляем проверку готовности
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data: