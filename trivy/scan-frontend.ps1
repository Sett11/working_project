# =============================================================================
# Trivy Security Scanner - Scan Frontend Only
# =============================================================================
# –û–ø–∏—Å–∞–Ω–∏–µ: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ Frontend –æ–±—Ä–∞–∑–∞
# –ê–≤—Ç–æ—Ä: Security Team
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-10-08
# =============================================================================

$ErrorActionPreference = "Continue"

# –¶–≤–µ—Ç–∞
$COLOR_GREEN = "Green"
$COLOR_RED = "Red"
$COLOR_YELLOW = "Yellow"
$COLOR_CYAN = "Cyan"

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
$envFile = Join-Path $PSScriptRoot ".." ".env"
$projectName = "working_project"

if (Test-Path $envFile) {
    Get-Content $envFile | ForEach-Object {
        if ($_ -match "^COMPOSE_PROJECT_NAME=(.+)$") {
            $projectName = $matches[1]
        }
    }
}

$imageName = "${projectName}_frontend"
$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$reportsDir = Join-Path $PSScriptRoot "reports"

Write-Host "`nüõ°Ô∏è  TRIVY - –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend –æ–±—Ä–∞–∑–∞`n" -ForegroundColor $COLOR_CYAN
Write-Host "–û–±—Ä–∞–∑: $imageName" -ForegroundColor White

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
$exists = docker images -q $imageName 2>$null
if (-not $exists) {
    Write-Host "‚úó –û–±—Ä–∞–∑ '$imageName' –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor $COLOR_RED
    Write-Host "  Frontend –æ–±—Ä–∞–∑ –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º." -ForegroundColor $COLOR_YELLOW
    Write-Host "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose build frontend" -ForegroundColor $COLOR_YELLOW
    exit 1
}

Write-Host "‚úì –û–±—Ä–∞–∑ –Ω–∞–π–¥–µ–Ω" -ForegroundColor $COLOR_GREEN
Write-Host "`n–ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...`n" -ForegroundColor $COLOR_CYAN

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (-not (Test-Path $reportsDir)) {
    New-Item -ItemType Directory -Path $reportsDir -Force | Out-Null
}

# –§–∞–π–ª—ã –æ—Ç—á—ë—Ç–æ–≤
$jsonReport = Join-Path $reportsDir "scan_frontend_${timestamp}.json"
$tableReport = Join-Path $reportsDir "scan_frontend_${timestamp}.txt"

# –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
docker run --rm `
    -v /var/run/docker.sock:/var/run/docker.sock `
    -v "${reportsDir}:/reports" `
    aquasec/trivy:latest `
    image `
    --severity CRITICAL,HIGH,MEDIUM `
    --format table `
    --output /reports/temp_frontend.txt `
    $imageName

if (Test-Path (Join-Path $reportsDir "temp_frontend.txt")) {
    Move-Item (Join-Path $reportsDir "temp_frontend.txt") $tableReport -Force
}

# JSON –æ—Ç—á—ë—Ç
docker run --rm `
    -v /var/run/docker.sock:/var/run/docker.sock `
    -v "${reportsDir}:/reports" `
    aquasec/trivy:latest `
    image `
    --severity CRITICAL,HIGH,MEDIUM,LOW `
    --format json `
    --output /reports/temp_frontend.json `
    $imageName

if (Test-Path (Join-Path $reportsDir "temp_frontend.json")) {
    Move-Item (Join-Path $reportsDir "temp_frontend.json") $jsonReport -Force
}

Write-Host "`n‚úì –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor $COLOR_GREEN
Write-Host "  –û—Ç—á—ë—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $reportsDir" -ForegroundColor $COLOR_CYAN
Write-Host "  ‚Ä¢ JSON:  $jsonReport" -ForegroundColor White
Write-Host "  ‚Ä¢ Table: $tableReport" -ForegroundColor White
Write-Host ""

