version: '3.8'

# Docker Compose конфигурация для Trivy Security Scanner
# Использование: docker-compose -f trivy/docker-compose.trivy.yml run --rm trivy-scan
# Документация: ./README.md

services:
  # Сервис Trivy для сканирования безопасности
  trivy-scan:
    image: aquasec/trivy:latest
    container_name: trivy_scanner
    
    # Монтируем необходимые директории
    volumes:
      # Docker socket для доступа к локальным образам
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # Кэш Trivy для ускорения повторных сканирований
      - trivy-cache:/root/.cache/trivy
      
      # Конфигурационные файлы
      - ./trivy-config.yaml:/config/trivy-config.yaml:ro
      - ../.trivyignore:/.trivyignore:ro
      
      # Директории для отчётов и логов
      - ./reports:/reports
      - ./logs:/logs
    
    # Переменные окружения
    environment:
      # Конфигурация Trivy
      - TRIVY_CONFIG=/config/trivy-config.yaml
      - TRIVY_CACHE_DIR=/root/.cache/trivy
      - TRIVY_DEBUG=false
      - TRIVY_TIMEOUT=10m
      
      # Настройки отчётов
      - TRIVY_FORMAT=table
      - TRIVY_SEVERITY=CRITICAL,HIGH,MEDIUM
      - TRIVY_EXIT_CODE=0
      
      # Дополнительные опции
      - TRIVY_NO_PROGRESS=false
      - TRIVY_QUIET=false
    
    # Команда по умолчанию (можно переопределить при запуске)
    command: --help
    
    # Ограничения ресурсов
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Политики безопасности
    security_opt:
      - no-new-privileges:true
    
    # Только чтение файловой системы (кроме /tmp и кэша)
    read_only: true
    tmpfs:
      - /tmp

volumes:
  # Кэш для базы данных уязвимостей Trivy
  trivy-cache:
    driver: local

networks:
  default:
    name: trivy_network

