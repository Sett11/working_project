import axios, { AxiosError, type InternalAxiosRequestConfig } from 'axios'
import { ENV } from '@/config/env'
import { navigateTo } from '@/utils/navigation'
import { useAuthStore } from '@/store/authStore'

const apiClient = axios.create({
  baseURL: ENV.API_BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
  timeout: 30000, // 30 seconds
})

// Request interceptor - –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É
apiClient.interceptors.request.use(
  (config: InternalAxiosRequestConfig) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ zustand store (–∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç persist middleware)
    const token = useAuthStore.getState().token
    const user = useAuthStore.getState().user
    
    console.log('üîµ API Request:', {
      url: config.url,
      method: config.method,
      hasToken: !!token,
      user: user ? { username: user.username, is_admin: user.is_admin } : null,
    })
    
    if (token && config.headers) {
      config.headers.Authorization = `Bearer ${token}`
    }
    return config
  },
  (error: AxiosError) => {
    return Promise.reject(error)
  }
)

// Response interceptor - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 401 –æ—à–∏–±–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
apiClient.interceptors.response.use(
  response => response,
  (error: AxiosError) => {
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üî¥ API Error:', {
      url: error.config?.url,
      status: error.response?.status,
      data: error.response?.data,
      message: error.message,
    })
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ 401 (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
    if (error.response?.status === 401) {
      console.warn('‚ö†Ô∏è 401 Unauthorized - –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
      // –û—á–∏—â–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ zustand store (–∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç persist middleware)
      useAuthStore.getState().clearAuth()
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (window.location.pathname !== '/' && window.location.pathname !== '/login') {
        navigateTo('/', true)
      }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ 403 (–Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞) - –ù–ï —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!
    if (error.response?.status === 403) {
      console.warn('‚ö†Ô∏è 403 Forbidden - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫', error.config?.url)
      // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, –Ω–µ —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /auth/me (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î)
    if (error.response?.status === 404 && error.config?.url?.includes('/auth/me')) {
      console.warn('‚ö†Ô∏è 404 User Not Found - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã, –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è')
      // –û—á–∏—â–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      useAuthStore.getState().clearAuth()
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (window.location.pathname !== '/' && window.location.pathname !== '/login') {
        navigateTo('/', true)
      }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö HTTP –æ—à–∏–±–æ–∫
    if (error.response) {
      // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π
      console.error('API Error:', error.response.status, error.response.data)
    } else if (error.request) {
      // –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
      console.error('Network Error:', error.message)
    } else {
      // –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
      console.error('Request Error:', error.message)
    }
    
    return Promise.reject(error)
  }
)

export default apiClient