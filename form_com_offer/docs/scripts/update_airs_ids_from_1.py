#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ID –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–µ airs.json
–ù–∞—á–∏–Ω–∞–µ—Ç —Å ID 1 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É: 1, 2, 3, 4...
"""

import json
import os
import sys
from pathlib import Path

def update_airs_ids():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç ID –≤—Å–µ—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–µ airs.json
    –ù–∞—á–∏–Ω–∞–µ—Ç —Å ID 1 –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É
    """
    
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É airs.json
    script_dir = Path(__file__).parent
    project_root = script_dir.parent.parent
    airs_file = project_root / "docs" / "airs.json"
    
    print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {airs_file}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not airs_file.exists():
        print(f"‚ùå –§–∞–π–ª {airs_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        print("üìñ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª airs.json...")
        with open(airs_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if not isinstance(data, dict) or 'air_conditioners' not in data:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞! –û–∂–∏–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–æ–º 'air_conditioners'")
            return False
        
        air_conditioners = data['air_conditioners']
        if not isinstance(air_conditioners, list):
            print("‚ùå –ü–æ–ª–µ 'air_conditioners' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º!")
            return False
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤: {len(air_conditioners)}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º ID, –Ω–∞—á–∏–Ω–∞—è —Å 1
        start_id = 1
        updated_count = 0
        
        print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º ID, –Ω–∞—á–∏–Ω–∞—è —Å {start_id}...")
        
        for i, conditioner in enumerate(air_conditioners):
            if not isinstance(conditioner, dict):
                print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç {i}: –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º")
                continue
            
            old_id = conditioner.get('id')
            new_id = start_id + i
            
            conditioner['id'] = new_id
            updated_count += 1
            
            if i < 5:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
                print(f"   ID {old_id} ‚Üí {new_id}")
            elif i == 5:
                print("   ...")
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ID –¥–ª—è {updated_count} –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        backup_file = airs_file.with_suffix('.json.backup')
        print(f"üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: {backup_file}")
        with open(backup_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        print("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...")
        with open(airs_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print("üéâ –ì–æ—Ç–æ–≤–æ! ID –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        print(f"üìà –î–∏–∞–ø–∞–∑–æ–Ω ID: {start_id} - {start_id + updated_count - 1}")
        
        return True
        
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ID –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –≤ airs.json")
    print("=" * 60)
    
    success = update_airs_ids()
    
    if success:
        print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1)

if __name__ == "__main__":
    main()
