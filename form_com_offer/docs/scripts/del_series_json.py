#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—è "series" –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ airs.json –∏ new_airs.json
–£–¥–∞–ª—è–µ—Ç –ø–æ–ª–µ "series" —É –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤-–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤, –æ—Å—Ç–∞–≤–ª—è—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
"""

import json
import os
from typing import Dict, Any, List

def remove_series_field(ac_dict: Dict[str, Any]) -> Dict[str, Any]:
    """
    –£–¥–∞–ª—è–µ—Ç –ø–æ–ª–µ "series" –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞
    
    Args:
        ac_dict: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å –±–µ–∑ –ø–æ–ª—è "series"
    """
    if "series" in ac_dict:
        del ac_dict["series"]
    return ac_dict

def process_json_file(input_file: str, output_file: str = None) -> bool:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç JSON —Ñ–∞–π–ª, —É–¥–∞–ª—è—è –ø–æ–ª–µ "series" —É –≤—Å–µ—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤
    
    Args:
        input_file: –ü—É—Ç—å –∫ –≤—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
        output_file: –ü—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É (–µ—Å–ª–∏ None, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Ö–æ–¥–Ω–æ–π)
        
    Returns:
        True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    
    if output_file is None:
        output_file = input_file
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(input_file):
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    try:
        # –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
        print(f"üìñ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª {input_file}...")
        with open(input_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if "air_conditioners" not in data:
            print(f"‚ùå –û—à–∏–±–∫–∞: –í —Ñ–∞–π–ª–µ {input_file} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á 'air_conditioners'!")
            return False
        
        air_conditioners = data["air_conditioners"]
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤: {len(air_conditioners)}")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ "series" —É –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞
        print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ 'series'...")
        processed_count = 0
        
        for i, ac in enumerate(air_conditioners):
            if i % 100 == 0:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 100 –∑–∞–ø–∏—Å–µ–π
                print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {i}/{len(air_conditioners)}")
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ "series" –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if "series" in ac:
                del ac["series"]
                processed_count += 1
        
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª–µ–π 'series': {processed_count}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"üíæ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ {output_file}...")
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ñ–∞–π–ª {output_file}")
        return True
        
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ —Ñ–∞–π–ª–µ {input_file}: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {input_file}: {e}")
        return False

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—è 'series'")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    files_to_process = [
        "airs.json",
        "new_airs.json"
    ]
    
    success_count = 0
    total_files = len(files_to_process)
    
    for file_name in files_to_process:
        print(f"\nüìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {file_name}")
        print("-" * 30)
        
        if process_json_file(file_name):
            success_count += 1
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª {file_name}")
    
    print("\n" + "=" * 50)
    print(f"üìà –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {success_count}/{total_files}")
    
    if success_count == total_files:
        print("üéâ –í—Å–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å!")
        return 1

if __name__ == "__main__":
    exit(main())
