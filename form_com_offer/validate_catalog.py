#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å ID –∏ –∏–º–µ–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import json
import os
import sys
from collections import defaultdict

def validate_components_catalog(catalog_path):
    """
    –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID.
    
    Args:
        catalog_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–∞—Ç–∞–ª–æ–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    
    Returns:
        bool: True –µ—Å–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –≤–∞–ª–∏–¥–µ–Ω, False –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏
    """
    try:
        with open(catalog_path, encoding='utf-8') as f:
            catalog_data = json.load(f)
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {catalog_path}")
        return False
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON –≤ —Ñ–∞–π–ª–µ {catalog_path}: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {catalog_path}: {e}")
        return False
    
    if not catalog_data or "components" not in catalog_data:
        print("‚ùå –û—à–∏–±–∫–∞: –ö–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–µ–∫—Ü–∏—é 'components'")
        return False
    
    components = catalog_data["components"]
    if not components:
        print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ö–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç")
        return True
    
    print(f"üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(components)} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
    component_ids = []
    component_names = []
    missing_ids = []
    duplicate_ids = []
    duplicate_names = []
    
    for i, comp in enumerate(components):
        comp_id = comp.get("id")
        comp_name = comp.get("name", "")
        
        if not comp_id:
            missing_ids.append(f"–ò–Ω–¥–µ–∫—Å {i}: '{comp_name}'")
        else:
            if comp_id in component_ids:
                duplicate_ids.append(str(comp_id))
            else:
                component_ids.append(comp_id)
        
        if comp_name in component_names:
            duplicate_names.append(comp_name)
        else:
            component_names.append(comp_name)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
    has_errors = False
    
    if missing_ids:
        print(f"‚ùå –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑ ID ({len(missing_ids)}):")
        for missing in missing_ids:
            print(f"   - {missing}")
        has_errors = True
    
    if duplicate_ids:
        print(f"‚ùå –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è ID ({len(duplicate_ids)}):")
        for dup_id in duplicate_ids:
            print(f"   - ID: {dup_id}")
        has_errors = True
    
    if duplicate_names:
        print(f"‚ùå –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞ ({len(duplicate_names)}):")
        for dup_name in duplicate_names:
            print(f"   - '{dup_name}'")
        has_errors = True
    
    if not has_errors:
        print("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–∞–ª–∏–¥–µ–Ω!")
        print(f"   - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(components)}")
        print(f"   - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID: {len(component_ids)}")
        print(f"   - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω: {len(component_names)}")
    
    return not has_errors

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞"""
    # –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    script_dir = os.path.dirname(os.path.abspath(__file__))
    catalog_path = os.path.join(script_dir, 'docs', 'components_catalog.json')
    
    print("üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
    print(f"üìÅ –ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É: {catalog_path}")
    print("-" * 50)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
    is_valid = validate_components_catalog(catalog_path)
    
    print("-" * 50)
    if is_valid:
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        sys.exit(0)
    else:
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        sys.exit(1)

if __name__ == "__main__":
    main()
